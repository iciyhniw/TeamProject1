Index: jamendo-player/src/components/Navbar.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { signOut } from 'firebase/auth';\r\nimport { auth } from '../firebase';\r\n\r\nconst Navbar = ({ onSearch, user }) => {\r\n    const navigate = useNavigate();\r\n\r\n    const handleFocus = () => {\r\n        navigate('/search');\r\n    };\r\n\r\n    return (\r\n        <div className=\"navbar\">\r\n            <div className=\"nav-links\">\r\n                <Link to=\"/\">Home</Link>\r\n            </div>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Search music...\"\r\n                onChange={(e) => onSearch && onSearch(e.target.value)}\r\n                onFocus={handleFocus}\r\n            />\r\n            <div className=\"nav-links nav-links-right\">\r\n                <Link to=\"/profile\">Profile</Link>\r\n            </div>\r\n            <div className=\"auth-section\">\r\n              {user ? (\r\n                <>\r\n                  <button onClick={() => signOut(auth)} className=\"logout-button\">–í–∏—Ö—ñ–¥</button>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Link to=\"/login\" className=\"auth-button login\">–£–≤—ñ–π—Ç–∏</Link>\r\n                  <Link to=\"/register\" className=\"auth-button register\">–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è</Link>\r\n                </>\r\n              )}\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n};\r\n\r\nexport default Navbar;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/jamendo-player/src/components/Navbar.jsx b/jamendo-player/src/components/Navbar.jsx
--- a/jamendo-player/src/components/Navbar.jsx	(revision 1baa7d9e52405f2d4cf87bbd0e2d3f0fb6b9efae)
+++ b/jamendo-player/src/components/Navbar.jsx	(date 1748190982168)
@@ -25,19 +25,19 @@
                 <Link to="/profile">Profile</Link>
             </div>
             <div className="auth-section">
-              {user ? (
-                <>
-                  <button onClick={() => signOut(auth)} className="logout-button">–í–∏—Ö—ñ–¥</button>
-                </>
-              ) : (
-                <>
-                  <Link to="/login" className="auth-button login">–£–≤—ñ–π—Ç–∏</Link>
-                  <Link to="/register" className="auth-button register">–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è</Link>
-                </>
-              )}
+                {user ? (
+                    <>
+                        <button onClick={() => signOut(auth)} className="logout-button">–í–∏—Ö—ñ–¥</button>
+                    </>
+                ) : (
+                    <>
+                        <Link to="/login" className="auth-button login">–£–≤—ñ–π—Ç–∏</Link>
+                        <Link to="/register" className="auth-button register">–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è</Link>
+                    </>
+                )}
             </div>
         </div>
-        
+
     );
 };
 
Index: jamendo-player/src/App.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport Home from './pages/Home';\r\nimport Search from './pages/Search';\r\nimport './styles/CommonFile.css'\r\nimport Profile from \"./pages/Profile\";\r\nimport LoginPage from './pages/LoginPage';\r\nimport RegisterPage from './pages/RegisterPage';\r\nimport Navbar from './components/Navbar';\r\nimport { auth } from './firebase';\r\nimport { onAuthStateChanged } from 'firebase/auth';\r\n\r\nconst App = () => {\r\n  const [user, setUser] = useState(null); // \uD83D\uDD39 –î–æ–¥–∞—î–º–æ —Å—Ç–∞–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\r\n      setUser(currentUser); // \uD83D\uDD04 –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ø—Ä–∏ –≤—Ö–æ–¥—ñ/–≤–∏—Ö–æ–¥—ñ\r\n    });\r\n\r\n    return () => unsubscribe(); // –æ—á–∏—Å—Ç–∫–∞ —Å–ª—É—Ö–∞—á–∞\r\n  }, []);\r\n  return(\r\n  <Router>\r\n    <Navbar user={user} />\r\n    <Routes>\r\n      <Route path=\"/\" element={<Home />} />\r\n      <Route path=\"/search\" element={<Search />} />\r\n      <Route path= \"/Profile\" element={<Profile />} />\r\n      <Route path=\"/login\" element={<LoginPage />} />\r\n      <Route path=\"/register\" element={<RegisterPage />} />\r\n    </Routes>\r\n  </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/jamendo-player/src/App.jsx b/jamendo-player/src/App.jsx
--- a/jamendo-player/src/App.jsx	(revision 1baa7d9e52405f2d4cf87bbd0e2d3f0fb6b9efae)
+++ b/jamendo-player/src/App.jsx	(date 1748191114361)
@@ -11,27 +11,27 @@
 import { onAuthStateChanged } from 'firebase/auth';
 
 const App = () => {
-  const [user, setUser] = useState(null); // üîπ –î–æ–¥–∞—î–º–æ —Å—Ç–∞–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
+    const [user, setUser] = useState(null); // üîπ –î–æ–¥–∞—î–º–æ —Å—Ç–∞–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 
-  useEffect(() => {
-    const unsubscribe = onAuthStateChanged(auth, (currentUser) => {
-      setUser(currentUser); // üîÑ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ø—Ä–∏ –≤—Ö–æ–¥—ñ/–≤–∏—Ö–æ–¥—ñ
-    });
+    useEffect(() => {
+        const unsubscribe = onAuthStateChanged(auth, (currentUser) => {
+            setUser(currentUser); // üîÑ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ø—Ä–∏ –≤—Ö–æ–¥—ñ/–≤–∏—Ö–æ–¥—ñ
+        });
 
-    return () => unsubscribe(); // –æ—á–∏—Å—Ç–∫–∞ —Å–ª—É—Ö–∞—á–∞
-  }, []);
-  return(
-  <Router>
-    <Navbar user={user} />
-    <Routes>
-      <Route path="/" element={<Home />} />
-      <Route path="/search" element={<Search />} />
-      <Route path= "/Profile" element={<Profile />} />
-      <Route path="/login" element={<LoginPage />} />
-      <Route path="/register" element={<RegisterPage />} />
-    </Routes>
-  </Router>
-  );
+        return () => unsubscribe(); // –æ—á–∏—Å—Ç–∫–∞ —Å–ª—É—Ö–∞—á–∞
+    }, []);
+    return(
+        <Router>
+            <Navbar user={user} />
+            <Routes>
+                <Route path="/" element={<Home />} />
+                <Route path="/search" element={<Search />} />
+                <Route path= "/Profile" element={<Profile />} />
+                <Route path="/login" element={<LoginPage />} />
+                <Route path="/register" element={<RegisterPage />} />
+            </Routes>
+        </Router>
+    );
 };
 
-export default App;
+export default App;
\ No newline at end of file
Index: jamendo-player/src/components/AudioPlayer.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useState, useRef, useEffect } from 'react';\r\nimport '../styles/AudioPlayer.css';\r\n\r\nconst AudioPlayer = ({ track }) => {\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const [duration, setDuration] = useState(0);\r\n  const [volume, setVolume] = useState(0.5);\r\n  const [isMuted, setIsMuted] = useState(false);\r\n  const [isLiked, setIsLiked] = useState(false);\r\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(0); // –°—Ç–∞–Ω –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Ç—Ä–µ–∫—É\r\n  const [playlist, setPlaylist] = useState(JSON.parse(localStorage.getItem('playlist') || '[]')); // –ü–ª–µ–π–ª–∏—Å—Ç —ñ–∑ localStorage\r\n  const audioRef = useRef(null);\r\n\r\n  // –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞–Ω—É isLiked —ñ –ø–ª–µ–π–ª–∏—Å—Ç–∞ –ø—Ä–∏ –∑–º—ñ–Ω—ñ —Ç—Ä–µ–∫—É\r\n  useEffect(() => {\r\n    if (!track) return;\r\n    const storedPlaylist = JSON.parse(localStorage.getItem('playlist') || '[]');\r\n    setPlaylist(storedPlaylist);\r\n    setIsLiked(storedPlaylist.some(item => item.audio === track.audio));\r\n    // –ó–Ω–∞—Ö–æ–¥–∏–º–æ —ñ–Ω–¥–µ–∫—Å –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Ç—Ä–µ–∫—É –≤ –ø–ª–µ–π–ª–∏—Å—Ç—ñ\r\n    const trackIndex = storedPlaylist.findIndex(item => item.audio === track.audio);\r\n    setCurrentTrackIndex(trackIndex >= 0 ? trackIndex : 0);\r\n  }, [track]);\r\n\r\n  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∞—É–¥—ñ–æ –ø—Ä–∏ –∑–º—ñ–Ω—ñ —Ç—Ä–µ–∫—É\r\n  const updateTrack = (newIndex) => {\r\n    if (playlist.length === 0) return;\r\n    setCurrentTrackIndex(newIndex);\r\n    const newTrack = playlist[newIndex];\r\n    if (audioRef.current) {\r\n      audioRef.current.src = newTrack.audio;\r\n      audioRef.current.load();\r\n      setCurrentTime(0);\r\n      if (isPlaying) {\r\n        audioRef.current.play().catch(err => console.error('–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è:', err));\r\n      }\r\n    }\r\n  };\r\n\r\n  const togglePlayPause = () => {\r\n    if (!audioRef.current) return;\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n    } else {\r\n      audioRef.current.play().catch(err => console.error('–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è:', err));\r\n    }\r\n    setIsPlaying(!isPlaying);\r\n  };\r\n\r\n  const handleTimeUpdate = () => {\r\n    if (!audioRef.current) return;\r\n    setCurrentTime(audioRef.current.currentTime);\r\n    setDuration(audioRef.current.duration);\r\n  };\r\n\r\n  const formatTime = (time) => {\r\n    const minutes = Math.floor(time / 60);\r\n    const seconds = Math.floor(time % 60);\r\n    return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\r\n  };\r\n\r\n  const handleSeek = (e) => {\r\n    if (!audioRef.current) return;\r\n    const progressBar = e.currentTarget;\r\n    const rect = progressBar.getBoundingClientRect();\r\n    const clickX = e.clientX - rect.left;\r\n    const percentage = clickX / rect.width;\r\n    const newTime = percentage * duration;\r\n    audioRef.current.currentTime = newTime;\r\n    setCurrentTime(newTime);\r\n  };\r\n\r\n  const handleVolumeChange = (e) => {\r\n    if (!audioRef.current) return;\r\n    const newVolume = e.target.value;\r\n    setVolume(newVolume);\r\n    audioRef.current.volume = newVolume;\r\n    setIsMuted(newVolume === 0);\r\n  };\r\n\r\n  const toggleMute = () => {\r\n    if (!audioRef.current) return;\r\n    if (isMuted) {\r\n      audioRef.current.volume = volume;\r\n      setIsMuted(false);\r\n    } else {\r\n      audioRef.current.volume = 0;\r\n      setIsMuted(true);\r\n    }\r\n  };\r\n\r\n  const handleLike = () => {\r\n    if (!track) return;\r\n    let updatedPlaylist = [...playlist];\r\n    const isTrackInPlaylist = updatedPlaylist.some(item => item.audio === track.audio);\r\n\r\n    if (!isTrackInPlaylist) {\r\n      updatedPlaylist.push({\r\n        name: track.name,\r\n        artist_name: track.artist_name,\r\n        audio: track.audio\r\n      });\r\n      localStorage.setItem('playlist', JSON.stringify(updatedPlaylist));\r\n      setPlaylist(updatedPlaylist);\r\n      setIsLiked(true);\r\n      alert(`–î–æ–¥–∞–Ω–æ \"${track.name}\" –¥–æ –ø–ª–µ–π–ª–∏—Å—Ç–∞!`);\r\n    } else {\r\n      updatedPlaylist = updatedPlaylist.filter(item => item.audio !== track.audio);\r\n      localStorage.setItem('playlist', JSON.stringify(updatedPlaylist));\r\n      setPlaylist(updatedPlaylist);\r\n      setIsLiked(false);\r\n      alert(`–í–∏–¥–∞–ª–µ–Ω–æ \"${track.name}\" –∑ –ø–ª–µ–π–ª–∏—Å—Ç–∞!`);\r\n    }\r\n    // –û–Ω–æ–≤–ª—é—î–º–æ —ñ–Ω–¥–µ–∫—Å –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Ç—Ä–µ–∫—É –ø—ñ—Å–ª—è –∑–º—ñ–Ω–∏ –ø–ª–µ–π–ª–∏—Å—Ç–∞\r\n    const trackIndex = updatedPlaylist.findIndex(item => item.audio === track.audio);\r\n    setCurrentTrackIndex(trackIndex >= 0 ? trackIndex : 0);\r\n  };\r\n\r\n  // –û–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–∫–∏ \"–Ω–∞–∑–∞–¥\"\r\n  const handlePrevious = () => {\r\n    if (playlist.length <= 1) return; // –ù—ñ—á–æ–≥–æ –Ω–µ —Ä–æ–±–∏–º–æ, —è–∫—â–æ –ø–ª–µ–π–ª–∏—Å—Ç –ø–æ—Ä–æ–∂–Ω—ñ–π –∞–±–æ –º–∞—î 1 —Ç—Ä–µ–∫\r\n    const newIndex = currentTrackIndex > 0 ? currentTrackIndex - 1 : playlist.length - 1; // –ó–∞—Ü–∏–∫–ª–µ–Ω–Ω—è –¥–æ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ —Ç—Ä–µ–∫—É\r\n    updateTrack(newIndex);\r\n  };\r\n\r\n  // –û–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–∫–∏ \"–≤–ø–µ—Ä–µ–¥\"\r\n  const handleNext = () => {\r\n    if (playlist.length <= 1) return; // –ù—ñ—á–æ–≥–æ –Ω–µ —Ä–æ–±–∏–º–æ, —è–∫—â–æ –ø–ª–µ–π–ª–∏—Å—Ç –ø–æ—Ä–æ–∂–Ω—ñ–π –∞–±–æ –º–∞—î 1 —Ç—Ä–µ–∫\r\n    const newIndex = currentTrackIndex < playlist.length - 1 ? currentTrackIndex + 1 : 0; // –ó–∞—Ü–∏–∫–ª–µ–Ω–Ω—è –¥–æ –ø–µ—Ä—à–æ–≥–æ —Ç—Ä–µ–∫—É\r\n    updateTrack(newIndex);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!track || !audioRef.current) return;\r\n    const audio = audioRef.current;\r\n    audio.volume = isMuted ? 0 : volume;\r\n    audio.addEventListener('loadedmetadata', () => {\r\n      setDuration(audio.duration);\r\n    });\r\n    return () => {\r\n      audio.removeEventListener('loadedmetadata', () => {});\r\n    };\r\n  }, [track, volume, isMuted]);\r\n\r\n  const progressPercentage = duration ? (currentTime / duration) * 100 : 0;\r\n\r\n  const handleShare = async () => {\r\n    if (!track) return;\r\n\r\n    const shareText = `–°–ª—É—Ö–∞–π \"${track.name}\" –≤—ñ–¥ ${track.artist_name}! \uD83C\uDFB5\\n${window.location.href}?track=${encodeURIComponent(track.audio)}`;\r\n\r\n    if (navigator.share) {\r\n      try {\r\n        await navigator.share({\r\n          title: `${track.name} - ${track.artist_name}`,\r\n          text: `–°–ª—É—Ö–∞–π —Ü—é –ø—ñ—Å–Ω—é!`,\r\n          url: window.location.href,\r\n        });\r\n        console.log('–ü—ñ—Å–Ω—è —É—Å–ø—ñ—à–Ω–æ –ø–æ–¥—ñ–ª–µ–Ω–∞!');\r\n      } catch (error) {\r\n        console.log('–ü–æ–º–∏–ª–∫–∞ –ø–æ–¥—ñ–ª—É:', error);\r\n      }\r\n    } else {\r\n      navigator.clipboard.writeText(shareText)\r\n        .then(() => alert('–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –ø—ñ—Å–Ω—é —Å–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ –≤ –±—É—Ñ–µ—Ä –æ–±–º—ñ–Ω—É!'))\r\n        .catch((err) => console.error('–ü–æ–º–∏–ª–∫–∞ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è:', err));\r\n    }\r\n  };\r\n\r\n  const handleDownload = async () => {\r\n    if (!track || !track.audio) {\r\n      alert('–ù–µ–º–∞—î –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ —Ñ–∞–π–ª—É –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(track.audio, {\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        headers: {\r\n          'Accept': 'audio/mpeg',\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è: ${response.statusText}`);\r\n      }\r\n\r\n      const blob = await response.blob();\r\n      const url = window.URL.createObjectURL(blob);\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.download = `${track.name}_${track.artist_name}.mp3`;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      window.URL.revokeObjectURL(url);\r\n\r\n      alert('–ü—ñ—Å–Ω—è –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î—Ç—å—Å—è...');\r\n    } catch (error) {\r\n      console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ:', error);\r\n      alert('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –ø—ñ—Å–Ω—é. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ URL –∞–±–æ —Å–µ—Ä–≤–µ—Ä–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è.');\r\n    }\r\n  };\r\n\r\n  if (!track) return null;\r\n\r\n  // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –Ω–∞–∑–≤–∏ —Ç—Ä–µ–∫—É –∑ –ø–ª–µ–π–ª–∏—Å—Ç–∞, —è–∫—â–æ —î\r\n  const displayTrack = playlist.length > 0 && currentTrackIndex < playlist.length ? playlist[currentTrackIndex] : track;\r\n\r\n  return (\r\n    <div className=\"audio-player\">\r\n      <h4>\r\n        {displayTrack.name} - {displayTrack.artist_name}\r\n      </h4>\r\n      <audio\r\n        ref={audioRef}\r\n        src={displayTrack.audio}\r\n        onTimeUpdate={handleTimeUpdate}\r\n        onEnded={() => {\r\n          setIsPlaying(false);\r\n          handleNext(); // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≤—ñ–¥—Ç–≤–æ—Ä—é—î–º–æ –Ω–∞—Å—Ç—É–ø–Ω–∏–π —Ç—Ä–µ–∫ –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è\r\n        }}\r\n      />\r\n      <span className=\"time\">{formatTime(currentTime)}</span>\r\n      <div className=\"controls\">\r\n        <button className={`like ${isLiked ? 'liked' : ''}`} onClick={handleLike}>‚ô•</button>\r\n        <button className=\"previous\" onClick={handlePrevious}>‚è™</button>\r\n        <button className=\"play-pause\" onClick={togglePlayPause}>\r\n          {isPlaying ? '‚è∏' : '‚ñ∂'}\r\n        </button>\r\n        <button className=\"next\" onClick={handleNext}>‚è©</button>\r\n        <button className=\"share\" onClick={handleShare}>\uD83D\uDCE4</button>\r\n        <button className=\"download\" onClick={handleDownload}>‚¨á\uFE0F</button>\r\n      </div>\r\n      <span className=\"time\">{formatTime(duration)}</span>\r\n      <div className=\"progress-bar\" onClick={handleSeek}>\r\n        <div className=\"progress\" style={{ width: `${progressPercentage}%` }} />\r\n      </div>\r\n      <div className=\"volume\">\r\n        <button className=\"mute-toggle\" onClick={toggleMute}>\r\n          <img\r\n            src={\r\n              isMuted\r\n                ? 'https://cdn-icons-png.flaticon.com/512/565/565284.png'\r\n                : 'https://cdn-icons-png.flaticon.com/512/565/565297.png'\r\n            }\r\n            alt={isMuted ? '–£–≤—ñ–º–∫–Ω—É—Ç–∏ –∑–≤—É–∫' : '–í–∏–º–∫–Ω—É—Ç–∏ –∑–≤—É–∫'}\r\n            className=\"mute-icon\"\r\n          />\r\n        </button>\r\n        <input\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max=\"1\"\r\n          step=\"0.01\"\r\n          value={isMuted ? 0 : volume}\r\n          onChange={handleVolumeChange}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioPlayer;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/jamendo-player/src/components/AudioPlayer.jsx b/jamendo-player/src/components/AudioPlayer.jsx
--- a/jamendo-player/src/components/AudioPlayer.jsx	(revision 1baa7d9e52405f2d4cf87bbd0e2d3f0fb6b9efae)
+++ b/jamendo-player/src/components/AudioPlayer.jsx	(date 1748190709769)
@@ -1,49 +1,18 @@
 import React, { useState, useRef, useEffect } from 'react';
-import '../styles/AudioPlayer.css';
 
 const AudioPlayer = ({ track }) => {
   const [isPlaying, setIsPlaying] = useState(false);
   const [currentTime, setCurrentTime] = useState(0);
   const [duration, setDuration] = useState(0);
   const [volume, setVolume] = useState(0.5);
-  const [isMuted, setIsMuted] = useState(false);
-  const [isLiked, setIsLiked] = useState(false);
-  const [currentTrackIndex, setCurrentTrackIndex] = useState(0); // –°—Ç–∞–Ω –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Ç—Ä–µ–∫—É
-  const [playlist, setPlaylist] = useState(JSON.parse(localStorage.getItem('playlist') || '[]')); // –ü–ª–µ–π–ª–∏—Å—Ç —ñ–∑ localStorage
   const audioRef = useRef(null);
 
-  // –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞–Ω—É isLiked —ñ –ø–ª–µ–π–ª–∏—Å—Ç–∞ –ø—Ä–∏ –∑–º—ñ–Ω—ñ —Ç—Ä–µ–∫—É
-  useEffect(() => {
-    if (!track) return;
-    const storedPlaylist = JSON.parse(localStorage.getItem('playlist') || '[]');
-    setPlaylist(storedPlaylist);
-    setIsLiked(storedPlaylist.some(item => item.audio === track.audio));
-    // –ó–Ω–∞—Ö–æ–¥–∏–º–æ —ñ–Ω–¥–µ–∫—Å –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Ç—Ä–µ–∫—É –≤ –ø–ª–µ–π–ª–∏—Å—Ç—ñ
-    const trackIndex = storedPlaylist.findIndex(item => item.audio === track.audio);
-    setCurrentTrackIndex(trackIndex >= 0 ? trackIndex : 0);
-  }, [track]);
-
-  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∞—É–¥—ñ–æ –ø—Ä–∏ –∑–º—ñ–Ω—ñ —Ç—Ä–µ–∫—É
-  const updateTrack = (newIndex) => {
-    if (playlist.length === 0) return;
-    setCurrentTrackIndex(newIndex);
-    const newTrack = playlist[newIndex];
-    if (audioRef.current) {
-      audioRef.current.src = newTrack.audio;
-      audioRef.current.load();
-      setCurrentTime(0);
-      if (isPlaying) {
-        audioRef.current.play().catch(err => console.error('–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è:', err));
-      }
-    }
-  };
-
   const togglePlayPause = () => {
     if (!audioRef.current) return;
     if (isPlaying) {
       audioRef.current.pause();
     } else {
-      audioRef.current.play().catch(err => console.error('–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è:', err));
+      audioRef.current.play();
     }
     setIsPlaying(!isPlaying);
   };
@@ -76,72 +45,19 @@
     const newVolume = e.target.value;
     setVolume(newVolume);
     audioRef.current.volume = newVolume;
-    setIsMuted(newVolume === 0);
-  };
-
-  const toggleMute = () => {
-    if (!audioRef.current) return;
-    if (isMuted) {
-      audioRef.current.volume = volume;
-      setIsMuted(false);
-    } else {
-      audioRef.current.volume = 0;
-      setIsMuted(true);
-    }
-  };
-
-  const handleLike = () => {
-    if (!track) return;
-    let updatedPlaylist = [...playlist];
-    const isTrackInPlaylist = updatedPlaylist.some(item => item.audio === track.audio);
-
-    if (!isTrackInPlaylist) {
-      updatedPlaylist.push({
-        name: track.name,
-        artist_name: track.artist_name,
-        audio: track.audio
-      });
-      localStorage.setItem('playlist', JSON.stringify(updatedPlaylist));
-      setPlaylist(updatedPlaylist);
-      setIsLiked(true);
-      alert(`–î–æ–¥–∞–Ω–æ "${track.name}" –¥–æ –ø–ª–µ–π–ª–∏—Å—Ç–∞!`);
-    } else {
-      updatedPlaylist = updatedPlaylist.filter(item => item.audio !== track.audio);
-      localStorage.setItem('playlist', JSON.stringify(updatedPlaylist));
-      setPlaylist(updatedPlaylist);
-      setIsLiked(false);
-      alert(`–í–∏–¥–∞–ª–µ–Ω–æ "${track.name}" –∑ –ø–ª–µ–π–ª–∏—Å—Ç–∞!`);
-    }
-    // –û–Ω–æ–≤–ª—é—î–º–æ —ñ–Ω–¥–µ–∫—Å –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Ç—Ä–µ–∫—É –ø—ñ—Å–ª—è –∑–º—ñ–Ω–∏ –ø–ª–µ–π–ª–∏—Å—Ç–∞
-    const trackIndex = updatedPlaylist.findIndex(item => item.audio === track.audio);
-    setCurrentTrackIndex(trackIndex >= 0 ? trackIndex : 0);
-  };
-
-  // –û–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–∫–∏ "–Ω–∞–∑–∞–¥"
-  const handlePrevious = () => {
-    if (playlist.length <= 1) return; // –ù—ñ—á–æ–≥–æ –Ω–µ —Ä–æ–±–∏–º–æ, —è–∫—â–æ –ø–ª–µ–π–ª–∏—Å—Ç –ø–æ—Ä–æ–∂–Ω—ñ–π –∞–±–æ –º–∞—î 1 —Ç—Ä–µ–∫
-    const newIndex = currentTrackIndex > 0 ? currentTrackIndex - 1 : playlist.length - 1; // –ó–∞—Ü–∏–∫–ª–µ–Ω–Ω—è –¥–æ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ —Ç—Ä–µ–∫—É
-    updateTrack(newIndex);
-  };
-
-  // –û–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–∫–∏ "–≤–ø–µ—Ä–µ–¥"
-  const handleNext = () => {
-    if (playlist.length <= 1) return; // –ù—ñ—á–æ–≥–æ –Ω–µ —Ä–æ–±–∏–º–æ, —è–∫—â–æ –ø–ª–µ–π–ª–∏—Å—Ç –ø–æ—Ä–æ–∂–Ω—ñ–π –∞–±–æ –º–∞—î 1 —Ç—Ä–µ–∫
-    const newIndex = currentTrackIndex < playlist.length - 1 ? currentTrackIndex + 1 : 0; // –ó–∞—Ü–∏–∫–ª–µ–Ω–Ω—è –¥–æ –ø–µ—Ä—à–æ–≥–æ —Ç—Ä–µ–∫—É
-    updateTrack(newIndex);
   };
 
   useEffect(() => {
     if (!track || !audioRef.current) return;
     const audio = audioRef.current;
-    audio.volume = isMuted ? 0 : volume;
+    audio.volume = volume;
     audio.addEventListener('loadedmetadata', () => {
       setDuration(audio.duration);
     });
     return () => {
       audio.removeEventListener('loadedmetadata', () => {});
     };
-  }, [track, volume, isMuted]);
+  }, [track, volume]);
 
   const progressPercentage = duration ? (currentTime / duration) * 100 : 0;
 
@@ -168,6 +84,7 @@
     }
   };
 
+  // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å–∫–∞—á—É–≤–∞–Ω–Ω—è
   const handleDownload = async () => {
     if (!track || !track.audio) {
       alert('–ù–µ–º–∞—î –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ —Ñ–∞–π–ª—É –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è.');
@@ -175,11 +92,12 @@
     }
 
     try {
+      // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Ñ–∞–π–ª —è–∫ Blob
       const response = await fetch(track.audio, {
         method: 'GET',
-        mode: 'cors',
+        mode: 'cors', // –î–æ–¥–∞—î–º–æ CORS, —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ
         headers: {
-          'Accept': 'audio/mpeg',
+          'Accept': 'audio/mpeg', // –í–∫–∞–∑—É—î–º–æ —Ç–∏–ø —Ñ–∞–π–ª—É
         },
       });
 
@@ -191,11 +109,11 @@
       const url = window.URL.createObjectURL(blob);
       const link = document.createElement('a');
       link.href = url;
-      link.download = `${track.name}_${track.artist_name}.mp3`;
+      link.download = `${track.name}_${track.artist_name}.mp3`; // –Ü–º'—è —Ñ–∞–π–ª—É
       document.body.appendChild(link);
       link.click();
       document.body.removeChild(link);
-      window.URL.revokeObjectURL(url);
+      window.URL.revokeObjectURL(url); // –û—á–∏—â–∞—î–º–æ –ø–∞–º‚Äô—è—Ç—å
 
       alert('–ü—ñ—Å–Ω—è –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î—Ç—å—Å—è...');
     } catch (error) {
@@ -206,31 +124,25 @@
 
   if (!track) return null;
 
-  // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –Ω–∞–∑–≤–∏ —Ç—Ä–µ–∫—É –∑ –ø–ª–µ–π–ª–∏—Å—Ç–∞, —è–∫—â–æ —î
-  const displayTrack = playlist.length > 0 && currentTrackIndex < playlist.length ? playlist[currentTrackIndex] : track;
-
   return (
     <div className="audio-player">
       <h4>
-        {displayTrack.name} - {displayTrack.artist_name}
+        {track.name} - {track.artist_name}
       </h4>
       <audio
         ref={audioRef}
-        src={displayTrack.audio}
+        src={track.audio}
         onTimeUpdate={handleTimeUpdate}
-        onEnded={() => {
-          setIsPlaying(false);
-          handleNext(); // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≤—ñ–¥—Ç–≤–æ—Ä—é—î–º–æ –Ω–∞—Å—Ç—É–ø–Ω–∏–π —Ç—Ä–µ–∫ –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è
-        }}
+        onEnded={() => setIsPlaying(false)}
       />
       <span className="time">{formatTime(currentTime)}</span>
       <div className="controls">
-        <button className={`like ${isLiked ? 'liked' : ''}`} onClick={handleLike}>‚ô•</button>
-        <button className="previous" onClick={handlePrevious}>‚è™</button>
+        <button className="like">‚ô•</button>
+        <button className="previous">‚è™</button>
         <button className="play-pause" onClick={togglePlayPause}>
           {isPlaying ? '‚è∏' : '‚ñ∂'}
         </button>
-        <button className="next" onClick={handleNext}>‚è©</button>
+        <button className="next">‚è©</button>
         <button className="share" onClick={handleShare}>üì§</button>
         <button className="download" onClick={handleDownload}>‚¨áÔ∏è</button>
       </div>
@@ -239,23 +151,12 @@
         <div className="progress" style={{ width: `${progressPercentage}%` }} />
       </div>
       <div className="volume">
-        <button className="mute-toggle" onClick={toggleMute}>
-          <img
-            src={
-              isMuted
-                ? 'https://cdn-icons-png.flaticon.com/512/565/565284.png'
-                : 'https://cdn-icons-png.flaticon.com/512/565/565297.png'
-            }
-            alt={isMuted ? '–£–≤—ñ–º–∫–Ω—É—Ç–∏ –∑–≤—É–∫' : '–í–∏–º–∫–Ω—É—Ç–∏ –∑–≤—É–∫'}
-            className="mute-icon"
-          />
-        </button>
         <input
           type="range"
           min="0"
           max="1"
           step="0.01"
-          value={isMuted ? 0 : volume}
+          value={volume}
           onChange={handleVolumeChange}
         />
       </div>
Index: jamendo-player/src/styles/CommonFile.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>@import './App.css';\r\n@import './AudioPlayer.css';\r\n@import './Genre.css';\r\n@import './index.css';\r\n@import './Navbar.css';\r\n@import './Profile.css';\r\n@import './Home.css';\r\n@import './Search.css';\r\n@import './LoginRegisterPages.css';
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/jamendo-player/src/styles/CommonFile.css b/jamendo-player/src/styles/CommonFile.css
--- a/jamendo-player/src/styles/CommonFile.css	(revision 1baa7d9e52405f2d4cf87bbd0e2d3f0fb6b9efae)
+++ b/jamendo-player/src/styles/CommonFile.css	(date 1748190709786)
@@ -6,4 +6,5 @@
 @import './Profile.css';
 @import './Home.css';
 @import './Search.css';
+@import './Library.css';
 @import './LoginRegisterPages.css';
\ No newline at end of file
Index: jamendo-player/src/PlaylistContext.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/jamendo-player/src/PlaylistContext.jsx b/jamendo-player/src/PlaylistContext.jsx
new file mode 100644
--- /dev/null	(date 1748190709791)
+++ b/jamendo-player/src/PlaylistContext.jsx	(date 1748190709791)
@@ -0,0 +1,55 @@
+import { createContext, useState } from 'react';
+
+export const PlaylistContext = createContext();
+
+export const PlaylistProvider = ({ children }) => {
+    const [playlists, setPlaylists] = useState([]);
+    const [isAddToPlaylistModalOpen, setIsAddToPlaylistModalOpen] = useState(false);
+    const [trackToAdd, setTrackToAdd] = useState(null);
+
+    const createPlaylist = (name, iconFile) => {
+        const iconUrl = `/icons/${iconFile.name}`; // Simulate icon upload
+        const newPlaylist = {
+            id: Date.now().toString(),
+            name,
+            iconUrl,
+            tracks: [],
+        };
+        setPlaylists([...playlists, newPlaylist]);
+    };
+
+    const addTrackToPlaylist = (playlistId, track) => {
+        setPlaylists(playlists.map(playlist => {
+            if (playlist.id === playlistId) {
+                if (!playlist.tracks.some(t => t.id === track.id)) {
+                    return { ...playlist, tracks: [...playlist.tracks, track] };
+                }
+            }
+            return playlist;
+        }));
+    };
+
+    const openAddToPlaylistModal = (track) => {
+        setTrackToAdd(track);
+        setIsAddToPlaylistModalOpen(true);
+    };
+
+    const closeAddToPlaylistModal = () => {
+        setIsAddToPlaylistModalOpen(false);
+        setTrackToAdd(null);
+    };
+
+    return (
+        <PlaylistContext.Provider value={{
+            playlists,
+            createPlaylist,
+            addTrackToPlaylist,
+            isAddToPlaylistModalOpen,
+            trackToAdd,
+            openAddToPlaylistModal,
+            closeAddToPlaylistModal,
+        }}>
+            {children}
+        </PlaylistContext.Provider>
+    );
+};
\ No newline at end of file
Index: jamendo-player/src/components/AddToPlaylistModal.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/jamendo-player/src/components/AddToPlaylistModal.jsx b/jamendo-player/src/components/AddToPlaylistModal.jsx
new file mode 100644
--- /dev/null	(date 1748190709807)
+++ b/jamendo-player/src/components/AddToPlaylistModal.jsx	(date 1748190709807)
@@ -0,0 +1,28 @@
+import { useContext } from 'react';
+import { PlaylistContext } from '../PlaylistContext';
+
+const AddToPlaylistModal = () => {
+    const { playlists, addTrackToPlaylist, isAddToPlaylistModalOpen, trackToAdd, closeAddToPlaylistModal } = useContext(PlaylistContext);
+
+    if (!isAddToPlaylistModalOpen || !trackToAdd) return null;
+
+    return (
+        <div className="modal">
+            <h2>Add "{trackToAdd.name}" to playlist</h2>
+            <ul>
+                {playlists.map(playlist => (
+                    <li key={playlist.id}>
+                        {playlist.name}
+                        <button onClick={() => {
+                            addTrackToPlaylist(playlist.id, trackToAdd);
+                            closeAddToPlaylistModal();
+                        }}>Add</button>
+                    </li>
+                ))}
+            </ul>
+            <button onClick={closeAddToPlaylistModal}>Cancel</button>
+        </div>
+    );
+};
+
+export default AddToPlaylistModal;
\ No newline at end of file
Index: jamendo-player/src/pages/Library.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/jamendo-player/src/pages/Library.jsx b/jamendo-player/src/pages/Library.jsx
new file mode 100644
--- /dev/null	(date 1748190709796)
+++ b/jamendo-player/src/pages/Library.jsx	(date 1748190709796)
@@ -0,0 +1,57 @@
+import { useContext, useState } from 'react';
+import { useNavigate } from 'react-router-dom';
+import { PlaylistContext } from '../PlaylistContext';
+
+const Library = () => {
+    const { playlists, createPlaylist } = useContext(PlaylistContext);
+    const [showCreateForm, setShowCreateForm] = useState(false);
+    const [playlistName, setPlaylistName] = useState('');
+    const [iconFile, setIconFile] = useState(null);
+    const navigate = useNavigate();
+
+    const handleCreatePlaylist = () => {
+        if (playlistName && iconFile) {
+            createPlaylist(playlistName, iconFile);
+            setPlaylistName('');
+            setIconFile(null);
+            setShowCreateForm(false);
+        }
+    };
+
+    return (
+        <div className="library-page">
+            <h1>Library</h1>
+            <button onClick={() => setShowCreateForm(true)}>Create New Playlist</button>
+            {showCreateForm && (
+                <div className="create-playlist-form">
+                    <input
+                        type="text"
+                        placeholder="Playlist Name"
+                        value={playlistName}
+                        onChange={(e) => setPlaylistName(e.target.value)}
+                    />
+                    <input
+                        type="file"
+                        onChange={(e) => setIconFile(e.target.files[0])}
+                    />
+                    <button onClick={handleCreatePlaylist}>Create</button>
+                    <button onClick={() => setShowCreateForm(false)}>Cancel</button>
+                </div>
+            )}
+            <div className="playlists">
+                {playlists.map(playlist => (
+                    <div
+                        key={playlist.id}
+                        className="playlist-item"
+                        onClick={() => navigate(`/playlist/${playlist.id}`)}
+                    >
+                        <img src={playlist.iconUrl} alt={playlist.name} />
+                        <p>{playlist.name}</p>
+                    </div>
+                ))}
+            </div>
+        </div>
+    );
+};
+
+export default Library;
\ No newline at end of file
Index: jamendo-player/src/styles/Library.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/jamendo-player/src/styles/Library.css b/jamendo-player/src/styles/Library.css
new file mode 100644
--- /dev/null	(date 1748190709815)
+++ b/jamendo-player/src/styles/Library.css	(date 1748190709815)
@@ -0,0 +1,119 @@
+.library-page {
+    background: linear-gradient(135deg, #2b2d42 0%, #4b5e8a 100%);
+    min-height: 100vh;
+    display: flex;
+    flex-direction: column;
+    padding: 2rem;
+}
+
+.library-page h1 {
+    color: #ffffff;
+    font-size: 2rem;
+    font-weight: 700;
+    text-align: center;
+    margin-bottom: 1.5rem;
+}
+
+.create-playlist-form {
+    background-color: rgba(255, 255, 255, 0.95);
+    border-radius: 16px;
+    padding: 1.5rem;
+    max-width: 500px;
+    margin: 0 auto 2rem;
+    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
+    display: flex;
+    flex-direction: column;
+    gap: 1rem;
+}
+
+.create-playlist-form input[type="text"],
+.create-playlist-form input[type="file"] {
+    padding: 0.7rem;
+    border: 1px solid #d1d5db;
+    border-radius: 8px;
+    font-size: 1rem;
+    color: #374151;
+}
+
+.create-playlist-form input[type="text"]:focus,
+.create-playlist-form input[type="file"]:focus {
+    outline: none;
+    border-color: #8b5cf6;
+    box-shadow: 0 0 0 3px rgba(139, 92, 246, 0.1);
+}
+
+.create-playlist-form button {
+    background: linear-gradient(90deg, #8b5cf6, #ec4899);
+    color: #ffffff;
+    font-weight: 600;
+    font-size: 1rem;
+    padding: 0.7rem 1.5rem;
+    border: none;
+    border-radius: 10px;
+    cursor: pointer;
+    transition: all 0.3s ease;
+    position: relative;
+    overflow: hidden;
+}
+
+.create-playlist-form button::after {
+    content: '';
+    position: absolute;
+    top: 0;
+    left: -100%;
+    width: 100%;
+    height: 100%;
+    background: linear-gradient(
+            90deg,
+            transparent,
+            rgba(255, 255, 255, 0.2),
+            transparent
+    );
+    transition: left 0.4s ease;
+}
+
+.create-playlist-form button:hover::after {
+    left: 100%;
+}
+
+.create-playlist-form button:hover {
+    transform: translateY(-2px);
+    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
+}
+
+.playlists {
+    display: grid;
+    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
+    gap: 1.5rem;
+    padding: 1rem;
+}
+
+.playlist-item {
+    background-color: rgba(255, 255, 255, 0.95);
+    border-radius: 12px;
+    padding: 1rem;
+    text-align: center;
+    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
+    transition: transform 0.3s ease;
+    cursor: pointer;
+}
+
+.playlist-item:hover {
+    transform: translateY(-4px);
+    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
+}
+
+.playlist-item img {
+    width: 100%;
+    height: 150px;
+    object-fit: cover;
+    border-radius: 8px;
+    margin-bottom: 0.5rem;
+}
+
+.playlist-item p {
+    color: #2b2d42;
+    font-size: 1.1rem;
+    font-weight: 500;
+    margin: 0;
+}
\ No newline at end of file
diff --git a/jamendo-player/src/pages/PlaylistPage.jsx b/jamendo-player/src/pages/PlaylistPage.jsx
new file mode 100644
