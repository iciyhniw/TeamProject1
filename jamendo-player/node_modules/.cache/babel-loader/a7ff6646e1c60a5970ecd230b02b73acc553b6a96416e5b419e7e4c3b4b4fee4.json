{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iciyhniw\\\\WebstormProjects\\\\TeamProject3\\\\jamendo-player\\\\src\\\\pages\\\\Search.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Navbar from '../components/Navbar';\nimport GenreCard from '../components/GenreCard';\nimport AudioPlayer from '../components/AudioPlayer';\nimport { getTracksByGenre, searchTracks } from '../api';\nimport './Search.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst genres = [\"pop\", \"rock\", \"jazz\", \"hiphop\", \"electronic\", \"classical\", \"reggae\"];\nconst Search = () => {\n  _s();\n  const [tracks, setTracks] = useState([]);\n  const [selectedTrack, setSelectedTrack] = useState(null);\n  const location = useLocation();\n  const handleSearch = async query => {\n    if (query.trim()) {\n      const result = await searchTracks(query);\n      setTracks(result);\n    } else {\n      setTracks([]);\n    }\n  };\n  const handleGenreClick = async genre => {\n    const result = await getTracksByGenre(genre);\n    setTracks(result);\n  };\n  useEffect(() => {\n    const query = new URLSearchParams(location.search).get('query');\n    if (query) {\n      handleSearch(query);\n    }\n  }, [location]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-page with-audio-player\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"genre-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: \"Genres\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"genre-grid\",\n          children: genres.map(g => /*#__PURE__*/_jsxDEV(GenreCard, {\n            genre: g,\n            image: `https://source.unsplash.com/160x100/?${g}`,\n            onClick: () => handleGenreClick(g)\n          }, g, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: \"Tracks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"track-grid\",\n          children: tracks.map(t => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => setSelectedTrack(t),\n            className: \"track-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: t.album_image,\n              alt: t.name,\n              className: \"track-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"track-info\",\n              children: [t.name, \" \\u2014 \", t.artist_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this)]\n          }, t.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AudioPlayer, {\n      track: selectedTrack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(Search, \"J+y4oWqJYtR58lFshHFOIBx/io0=\", false, function () {\n  return [useLocation];\n});\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","Navbar","GenreCard","AudioPlayer","getTracksByGenre","searchTracks","jsxDEV","_jsxDEV","genres","Search","_s","tracks","setTracks","selectedTrack","setSelectedTrack","location","handleSearch","query","trim","result","handleGenreClick","genre","URLSearchParams","search","get","className","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","map","g","image","onClick","t","src","album_image","alt","name","artist_name","id","track","_c","$RefreshReg$"],"sources":["C:/Users/iciyhniw/WebstormProjects/TeamProject3/jamendo-player/src/pages/Search.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Navbar from '../components/Navbar';\r\nimport GenreCard from '../components/GenreCard';\r\nimport AudioPlayer from '../components/AudioPlayer';\r\nimport { getTracksByGenre, searchTracks } from '../api';\r\nimport './Search.css';\r\n\r\nconst genres = [\"pop\", \"rock\", \"jazz\", \"hiphop\", \"electronic\", \"classical\", \"reggae\"];\r\n\r\nconst Search = () => {\r\n    const [tracks, setTracks] = useState([]);\r\n    const [selectedTrack, setSelectedTrack] = useState(null);\r\n    const location = useLocation();\r\n\r\n    const handleSearch = async (query) => {\r\n        if (query.trim()) {\r\n            const result = await searchTracks(query);\r\n            setTracks(result);\r\n        } else {\r\n            setTracks([]);\r\n        }\r\n    };\r\n\r\n    const handleGenreClick = async (genre) => {\r\n        const result = await getTracksByGenre(genre);\r\n        setTracks(result);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const query = new URLSearchParams(location.search).get('query');\r\n        if (query) {\r\n            handleSearch(query);\r\n        }\r\n    }, [location]);\r\n\r\n    return (\r\n        <div className=\"search-page with-audio-player\">\r\n            <Navbar onSearch={handleSearch} />\r\n            <div className=\"search-container\">\r\n                <div className=\"genre-section\">\r\n                    <h2 className=\"section-title\">Genres</h2>\r\n                    <div className=\"genre-grid\">\r\n                        {genres.map((g) => (\r\n                            <GenreCard\r\n                                key={g}\r\n                                genre={g}\r\n                                image={`https://source.unsplash.com/160x100/?${g}`}\r\n                                onClick={() => handleGenreClick(g)}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <div className=\"track-section\">\r\n                    <h2 className=\"section-title\">Tracks</h2>\r\n                    <div className=\"track-grid\">\r\n                        {tracks.map((t) => (\r\n                            <div key={t.id} onClick={() => setSelectedTrack(t)} className=\"track-card\">\r\n                                <img src={t.album_image} alt={t.name} className=\"track-image\" />\r\n                                <p className=\"track-info\">{t.name} â€” {t.artist_name}</p>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <AudioPlayer track={selectedTrack} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Search;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}